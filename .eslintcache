<<<<<<< HEAD
[{"D:\\React\\5X5 Project\\UPDATEV2\\Educational-Center\\src\\components\\Profile\\profile.js":"1","D:\\React\\5X5 Project\\UPDATEV2\\Educational-Center\\src\\components\\ManageActivities\\ManageActivitiesFormEditPending.js":"2","D:\\React\\5X5 Project\\UPDATEV2\\Educational-Center\\src\\components\\ManageActivities\\EditResponsiveDialogActivities.js":"3","D:\\React\\5X5 Project\\UPDATEV2\\Educational-Center\\src\\components\\ManageActivities\\ManageActivitiesFormEditApproved.js":"4"},{"size":3734,"mtime":1623076285068,"results":"5","hashOfConfig":"6"},{"size":14466,"mtime":1623080551197,"results":"7","hashOfConfig":"6"},{"size":3544,"mtime":1623080260434,"results":"8","hashOfConfig":"6"},{"size":11903,"mtime":1623080543166,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1tl7adq",{"filePath":"12","messages":"13","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"D:\\React\\5X5 Project\\UPDATEV2\\Educational-Center\\src\\components\\Profile\\profile.js",["20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35"],"D:\\React\\5X5 Project\\UPDATEV2\\Educational-Center\\src\\components\\ManageActivities\\ManageActivitiesFormEditPending.js",["36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport FormElement from \"./FormElement\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport UpdateResponsiveDialogActivities from \"./UpdateResponsiveDialogActivities\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { listPendingActivitiess } from \"../../graphql/queries\";\r\nimport {\r\n  deletePendingActivities,\r\n  deleteApprovedActivities,\r\n} from \"../../graphql/mutations\";\r\nimport Amplify, { API, graphqlOperation, selectInput } from \"aws-amplify\";\r\nimport ActivityTable from \"../Activities/ActivityTable\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 1000,\r\n    margin: \"10px\",\r\n    backgroundColor: \"#d8e3e7\",\r\n    color: \"#132c33\",\r\n    text: \"#132c33\",\r\n    borderRadius: \"4%\",\r\n    right: 0,\r\n    transition: \"transform 0.15s ease-in-out\",\r\n  },\r\n\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    color: \"#132c33\", //arrow color\r\n\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n    color: \"#132c33\",\r\n  },\r\n  tr_dates: {\r\n    margin: \"auto\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n    color: \"#132c33\",\r\n  },\r\n  subColor: {\r\n    color: \"#132c33\",\r\n  },\r\n  textField: {\r\n    zIndex: \"0\",\r\n    border: \"3px solid #132c33\",\r\n    borderRadius: \"10px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    minWidth: \"95%\",\r\n    marginTop: \"15px\",\r\n    \"& label.Mui-focused\": {\r\n      padding: \"10px\",\r\n      color: \"#132c33\",\r\n    },\r\n    \"& input\": {\r\n      color: \"#132c33\",\r\n    },\r\n    \"& label\": {\r\n      padding: \"10px\",\r\n      color: \"#132c33\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#132c33\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#132c33\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ManageActivitiesFormEditPending(props) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [pendingActivitiess, setPendingActivitiess] = useState([]);\r\n  const [allPendingActivitiess, setAllPendingActivitiess] = useState([]);\r\n  const [dates, setDates] = useState(fillDateInputs, []);\r\n  const [zoomLink, setZoomLink] = useState(fillZoomInput, \"\");\r\n  const [checked, setChecked] = useState(fillCheckInput, \"\");\r\n\r\n  // const [allPendingActivitiess, setAllPendingActivitiess] = useState([]);\r\n\r\n  var handleChange = (event) => {\r\n    var toReturn;\r\n    setChecked(!document.getElementById(\"zoomCheckBox\").checked);\r\n    if (!document.getElementById(\"zoomCheckBox\").checked == true) {\r\n      toReturn = (\r\n        <tr>\r\n          <FormElement name=\"activity_zoom\" title=\"קישור לזום:\" type=\"text\" />\r\n        </tr>\r\n      );\r\n    } else {\r\n      toReturn = null;\r\n    }\r\n    setZoomLink(toReturn);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch for content suppliers\r\n    fetchPendingActivities();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fetch for admins\r\n    fetchAllPendingActivities();\r\n  }, []);\r\n  const fetchPendingActivities = async () => {\r\n    try {\r\n      const PendingActivitiesData = await API.graphql(\r\n        graphqlOperation(listPendingActivitiess, {\r\n          filter: { email: { eq: props.email } },\r\n        })\r\n      );\r\n      const PendingActivitiesList =\r\n        PendingActivitiesData.data.listPendingActivitiess.items;\r\n      setPendingActivitiess(PendingActivitiesList);\r\n    } catch (error) {\r\n      console.log(\"error on fetching Pending Activities\", error);\r\n    }\r\n  };\r\n\r\n  const fetchAllPendingActivities = async () => {\r\n    try {\r\n      const PendingActivitiesData = await API.graphql(\r\n        graphqlOperation(listPendingActivitiess)\r\n      );\r\n      const PendingActivitiesList =\r\n        PendingActivitiesData.data.listPendingActivitiess.items;\r\n      setAllPendingActivitiess(PendingActivitiesList);\r\n    } catch (error) {\r\n      console.log(\"error on fetching Pending Activities\", error);\r\n    }\r\n  };\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  function createDateInputs(event) {\r\n    var toReturn = [];\r\n    if (document.getElementsByName(\"activityCount\")[0].value > 10) {\r\n      document.getElementsByName(\"activityCount\")[0].value = 10;\r\n    } else if (document.getElementsByName(\"activityCount\")[0].value < 1) {\r\n      document.getElementsByName(\"activityCount\")[0].value = 1;\r\n    }\r\n    var tzoffset = new Date().getTimezoneOffset() * 60000;\r\n    for (\r\n      var i = 0;\r\n      i < document.getElementsByName(\"activityCount\")[0].value;\r\n      i++\r\n    ) {\r\n      var temp = \":מפגש\" + \" \" + (i + 1);\r\n      toReturn.push(\r\n        <tr>\r\n          <TextField\r\n            id=\"datetime-local\"\r\n            name=\"dates\"\r\n            label={temp}\r\n            type=\"datetime-local\"\r\n            defaultValue={new Date(Date.now() - tzoffset)\r\n              .toISOString()\r\n              .substring(0, 16)}\r\n            className={classes.textField}\r\n            InputLabelProps={{\r\n              style: {\r\n                color: \"#132c33\",\r\n                right: \"0px\",\r\n                marginLeft: \"35px\",\r\n                backgroundColor: \"#d8e3e7\",\r\n              },\r\n              shrink: true,\r\n            }}\r\n            InputProps={{\r\n              style: { color: \"#132c33\" },\r\n            }}\r\n          />\r\n        </tr>\r\n      );\r\n    }\r\n    setDates(toReturn);\r\n  }\r\n  function fillDateInputs() {\r\n    var toReturn = [];\r\n    for (var i = 0; i < props.activityCount; i++) {\r\n      var temp = \":מפגש\" + \" \" + (i + 1);\r\n      toReturn.push(\r\n        <tr>\r\n          <TextField\r\n            id=\"datetime-local\"\r\n            name=\"dates\"\r\n            label={temp}\r\n            type=\"datetime-local\"\r\n            defaultValue={props.dates[i]}\r\n            className={classes.textField}\r\n            InputLabelProps={{\r\n              style: {\r\n                color: \"#132c33\",\r\n                right: \"0px\",\r\n                marginLeft: \"35px\",\r\n                backgroundColor: \"#d8e3e7\",\r\n              },\r\n              shrink: true,\r\n            }}\r\n            InputProps={{\r\n              style: { color: \"#132c33\" },\r\n            }}\r\n          />\r\n        </tr>\r\n      );\r\n    }\r\n    return toReturn;\r\n  }\r\n  function fillZoomInput() {\r\n    if (props.isZoom) {\r\n      return (\r\n        <tr>\r\n          <FormElement\r\n            name=\"activity_zoom\"\r\n            title=\"קישור לזום:\"\r\n            type=\"text\"\r\n            defaultValue={props.zoom}\r\n          />\r\n        </tr>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n  function fillCheckInput() {\r\n    if (props.isZoom) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  var text = <b>{props.title}</b>;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader title={text} />\r\n      <CardContent>\r\n        {props.groupName === \"admins\"\r\n          ? allPendingActivitiess.map((activity) => {\r\n            if (props.id === activity.id) {\r\n              return (\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                  <table>\r\n                    <tr>\r\n                      <FormElement\r\n                        name=\"name\"\r\n                        title=\"שם הקורס:\"\r\n                        type=\"text\"\r\n                        defaultValue={activity.title}\r\n                      />\r\n                    </tr>\r\n                    <tr>\r\n                      <FormElement\r\n                        name=\"activity_img\"\r\n                        title=\"קישור לתמונת הקורס:\"\r\n                        type=\"text\"\r\n                        defaultValue={activity.img}\r\n                      />\r\n                    </tr>\r\n                    <tr>\r\n                      הקורס יתבצע באופן מקוון\r\n                        <Checkbox\r\n                        id=\"zoomCheckBox\"\r\n                        checked={checked}\r\n                        onClick={handleChange}\r\n                        fill=\"red\"\r\n                        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                        style={{\r\n                          paddingTop: \"1px\",\r\n                          backgroundColor: \"#132c33\", maxWidth: \"40px\",\r\n                          maxHeight: \"40px\",\r\n                        }}\r\n                      />\r\n                    </tr>\r\n                    <tr>{zoomLink}</tr>\r\n                    <tr>\r\n                      <FormElement\r\n                        name=\"activityCount\"\r\n                        title=\"מספר מפגשים:\"\r\n                        type=\"number\"\r\n                        onChange={createDateInputs}\r\n                        defaultValue={activity.activityCount}\r\n                      />\r\n                    </tr>\r\n                    <tr id=\"dates_tr\">{dates}</tr>\r\n                    <tr>\r\n                      <TextField\r\n                        id=\"outlined-multiline-static\"\r\n                        name=\"activity_description\"\r\n                        label=\": תיאור הקורס\"\r\n                        className={classes.textField}\r\n                        defaultValue={activity.description}\r\n                        multiline\r\n                        rows={4}\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{\r\n                          style: {\r\n                            color: \"#132c33\",\r\n                            right: \"0px\",\r\n                            marginLeft: \"35px\",\r\n                            backgroundColor: \"#d8e3e7\",\r\n                          },\r\n                          shrink: true,\r\n                        }}\r\n                        InputProps={{\r\n                          style: { color: \"#132c33\" },\r\n                        }}\r\n                      />\r\n                    </tr>\r\n                    <tr>\r\n                      <UpdateResponsiveDialogActivities\r\n                        isZoom={checked}\r\n                        type={props.type}\r\n                        id={activity.id}\r\n                        currentTime={props.currentTime}\r\n                        dates={dates}\r\n                      />\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n              );\r\n            }\r\n          })\r\n          :\r\n          pendingActivitiess.map((activity) => {\r\n            if (props.id === activity.id) {\r\n              return (\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                  <table>\r\n                    <tr>\r\n                      <FormElement\r\n                        name=\"name\"\r\n                        title=\": שם הקורס\"\r\n                        type=\"text\"\r\n                        defaultValue={activity.title}\r\n                      />\r\n                    </tr>\r\n                    <tr>\r\n                      <FormElement\r\n                        name=\"activity_img\"\r\n                        title=\": קישור לתמונת הקורס\"\r\n                        type=\"text\"\r\n                        defaultValue={activity.img}\r\n                      />\r\n                    </tr>\r\n                    <tr>\r\n                      הקורס יתבצע באופן מקוון\r\n                        <Checkbox\r\n                        id=\"zoomCheckBox\"\r\n                        checked={checked}\r\n                        onClick={handleChange}\r\n                        fill=\"red\"\r\n                        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                        style={{\r\n                          paddingTop: \"1px\",\r\n                          backgroundColor: \"#132c33\", maxWidth: \"40px\",\r\n                          maxHeight: \"40px\",\r\n                        }}\r\n                      />\r\n                    </tr>\r\n                    <tr>{zoomLink}</tr>\r\n                    <tr>\r\n                      <FormElement\r\n                        name=\"activityCount\"\r\n                        title=\": מספר מפגשים\"\r\n                        type=\"number\"\r\n                        onChange={createDateInputs}\r\n                        defaultValue={activity.activityCount}\r\n                      />\r\n                    </tr>\r\n                    <tr id=\"dates_tr\">{dates}</tr>\r\n                    <tr>\r\n                      <TextField\r\n                        id=\"outlined-multiline-static\"\r\n                        label=\": תיאור הקורס\"\r\n                        name=\"activity_description\"\r\n                        className={classes.textField}\r\n                        defaultValue={activity.description}\r\n                        multiline\r\n                        rows={4}\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{\r\n                          style: {\r\n                            color: \"#132c33\",\r\n                            right: \"0px\",\r\n                            marginLeft: \"35px\",\r\n                            backgroundColor: \"#d8e3e7\",\r\n                          },\r\n                          shrink: true,\r\n                        }}\r\n                        InputProps={{\r\n                          style: { color: \"#d8e3e7\" },\r\n                        }}\r\n                      />\r\n                    </tr>\r\n                    <tr>\r\n                      <UpdateResponsiveDialogActivities\r\n                        isZoom={checked}\r\n                        groupName={props.groupName}\r\n                        type={props.type}\r\n                        currentTime={props.currentTime}\r\n                        id={activity.id}\r\n                        dates={dates}\r\n                      />\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n              );\r\n            }\r\n          })}\r\n      </CardContent>\r\n      {/* </Collapse> */}\r\n    </Card>\r\n  );\r\n}\r\n","D:\\React\\5X5 Project\\UPDATEV2\\Educational-Center\\src\\components\\ManageActivities\\EditResponsiveDialogActivities.js",[],"D:\\React\\5X5 Project\\UPDATEV2\\Educational-Center\\src\\components\\ManageActivities\\ManageActivitiesFormEditApproved.js",["53","54","55","56","57","58","59","60","61"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport FormElement from \"./FormElement\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport UpdateResponsiveDialogActivities from \"./UpdateResponsiveDialogActivities\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { listApprovedActivitiess } from \"../../graphql/queries\";\r\nimport { API, graphqlOperation } from \"aws-amplify\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 1000,\r\n    margin: \"10px\",\r\n    backgroundColor: \"#d8e3e7\",\r\n    color: \"#132c33\",\r\n    text: \"#132c33\",\r\n    borderRadius: \"4%\",\r\n    right: 0,\r\n    transition: \"transform 0.15s ease-in-out\",\r\n  },\r\n\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    color: \"#132c33\", //arrow color\r\n\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n    color: \"#132c33\",\r\n  },\r\n  tr_dates: {\r\n    margin: \"auto\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n    color: \"#132c33\",\r\n  },\r\n  subColor: {\r\n    color: \"red\",\r\n  },\r\n  textField: {\r\n    zIndex: \"0\",\r\n    border: \"3px solid #132c33\",\r\n    borderRadius: \"10px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    minWidth: \"95%\",\r\n    marginTop: \"15px\",\r\n    \"& label.Mui-focused\": {\r\n      padding: \"10px\",\r\n      color: \"#132c33\",\r\n    },\r\n    \"& input\": {\r\n      color: \"#132c33\",\r\n    },\r\n    \"& label\": {\r\n      padding: \"10px\",\r\n      color: \"#132c33\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#132c33\",\r\n    },\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#132c33\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ManageActivitiesFormEditApproved(props) {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const [approvedActivitiess, setApprovedActivitiess] = useState([]);\r\n  const [allApprovedActivitiess, setAllApprovedActivitiess] = useState([]);\r\n  const [dates, setDates] = useState(fillDateInputs, []);\r\n  const [zoomLink, setZoomLink] = useState(fillZoomInput, \"\");\r\n  const [checked, setChecked] = useState(fillCheckInput, \"\");\r\n\r\n  var handleChange = (event) => {\r\n    var toReturn;\r\n    setChecked(!document.getElementById(\"zoomCheckBox\").checked);\r\n    if (!document.getElementById(\"zoomCheckBox\").checked == true) {\r\n      toReturn = (\r\n        <tr>\r\n          <FormElement name=\"activity_zoom\" title=\"קישור לזום:\" type=\"text\" />\r\n        </tr>\r\n      );\r\n    } else {\r\n      toReturn = null;\r\n    }\r\n    setZoomLink(toReturn);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch for content suppliers\r\n    fetchApprovedActivities();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Fetch for admins\r\n    fetchAllApprovedActivities();\r\n  }, []);\r\n  const fetchApprovedActivities = async () => {\r\n    try {\r\n      const ApprovedActivitiesData = await API.graphql(\r\n        graphqlOperation(listApprovedActivitiess, {\r\n          filter: { email: { eq: props.email } },\r\n        })\r\n      );\r\n      const ApprovedActivitiesList =\r\n        ApprovedActivitiesData.data.listApprovedActivitiess.items;\r\n      setApprovedActivitiess(ApprovedActivitiesList);\r\n    } catch (error) {\r\n      console.log(\"error on fetching Approved Activities\", error);\r\n    }\r\n  };\r\n\r\n  const fetchAllApprovedActivities = async () => {\r\n    try {\r\n      const ApprovedActivitiesData = await API.graphql(\r\n        graphqlOperation(listApprovedActivitiess)\r\n      );\r\n      const ApprovedActivitiesList =\r\n        ApprovedActivitiesData.data.listApprovedActivitiess.items;\r\n      setAllApprovedActivitiess(ApprovedActivitiesList);\r\n    } catch (error) {\r\n      console.log(\"error on fetching Approved Activities\", error);\r\n    }\r\n  };\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  function createDateInputs(event) {\r\n    var toReturn = [];\r\n    if (document.getElementsByName(\"activityCount\")[0].value > 10) {\r\n      document.getElementsByName(\"activityCount\")[0].value = 10;\r\n    } else if (document.getElementsByName(\"activityCount\")[0].value < 1) {\r\n      document.getElementsByName(\"activityCount\")[0].value = 1;\r\n    }\r\n    var tzoffset = new Date().getTimezoneOffset() * 60000;\r\n    for (\r\n      var i = 0;\r\n      i < document.getElementsByName(\"activityCount\")[0].value;\r\n      i++\r\n    ) {\r\n      var temp = \":תאריך פעילות מספר\" + \" \" + (i + 1);\r\n      toReturn.push(\r\n        <tr>\r\n          <TextField\r\n            id=\"datetime-local\"\r\n            name=\"dates\"\r\n            label={temp}\r\n            type=\"datetime-local\"\r\n            defaultValue={new Date(Date.now() - tzoffset)\r\n              .toISOString()\r\n              .substring(0, 16)}\r\n            className={classes.textField}\r\n            style={{ minWidth: \"95%\" }}\r\n          />\r\n        </tr>\r\n      );\r\n    }\r\n    setDates(toReturn);\r\n  }\r\n  function fillDateInputs() {\r\n    var toReturn = [];\r\n    var tzoffset = new Date().getTimezoneOffset() * 60000;\r\n    for (var i = 0; i < props.activityCount; i++) {\r\n      var temp = \":מפגש\" + \" \" + (i + 1);\r\n      toReturn.push(\r\n        <tr className={classes.tr_dates}>\r\n          <TextField\r\n            id=\"datetime-local\"\r\n            name=\"dates\"\r\n            label={temp}\r\n            type=\"datetime-local\"\r\n            defaultValue={props.dates[i]}\r\n            className={classes.textField}\r\n          />\r\n        </tr>\r\n      );\r\n    }\r\n    return toReturn;\r\n  }\r\n\r\n  function fillZoomInput() {\r\n    if (props.isZoom) {\r\n      return (\r\n        <tr>\r\n          <FormElement\r\n            name=\"activity_zoom\"\r\n            title=\"קישור לזום:\"\r\n            type=\"text\"\r\n            defaultValue={props.zoom}\r\n          />\r\n        </tr>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n  function fillCheckInput() {\r\n    if (props.isZoom) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  var text = <b>{props.title}</b>;\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader title={text} />\r\n      <CardContent>\r\n        {props.groupName === \"admins\"\r\n          ? allApprovedActivitiess.map((activity) => {\r\n            if (props.id === activity.id) {\r\n              return (\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                  <table>\r\n                    <tr>\r\n                      <FormElement\r\n                        name=\"name\"\r\n                        title=\": שם הקורס\"\r\n                        type=\"text\"\r\n                        defaultValue={activity.title}\r\n                      />\r\n                    </tr>\r\n                    <tr>\r\n                      <FormElement\r\n                        name=\"activity_img\"\r\n                        title=\": קישור לתמונת הקורס\"\r\n                        type=\"text\"\r\n                        defaultValue={activity.img}\r\n                      />\r\n                    </tr>\r\n                    <tr>\r\n                      הקורס יתבצע באופן מקוון\r\n                        <Checkbox\r\n                        id=\"zoomCheckBox\"\r\n                        checked={checked}\r\n                        onClick={handleChange}\r\n                        fill=\"red\"\r\n                        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                        style={{\r\n                          paddingTop: \"1px\",\r\n                          backgroundColor: \"#132c33\", maxWidth: \"40px\",\r\n                          maxHeight: \"40px\",\r\n                        }}\r\n                      />\r\n                    </tr>\r\n                    <tr>{zoomLink}</tr>\r\n                    <tr>\r\n                      <FormElement\r\n                        name=\"activityCount\"\r\n                        title=\": מספר מפגשים\"\r\n                        type=\"number\"\r\n                        onChange={createDateInputs}\r\n                        defaultValue={activity.activityCount}\r\n                      />\r\n                    </tr>\r\n                    <tr id=\"dates_tr\">{dates}</tr>\r\n                    <tr>\r\n                      <TextField\r\n                        id=\"outlined-multiline-static\"\r\n                        label=\": תיאור הקורס\"\r\n                        className={classes.textField}\r\n                        name=\"activity_description\"\r\n                        defaultValue={activity.description}\r\n                        multiline\r\n                        rows={4}\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{\r\n                          style: {\r\n                            color: \"#132c33\",\r\n                            right: \"0px\",\r\n                            marginLeft: \"35px\",\r\n                            backgroundColor: \"#d8e3e7\",\r\n                          },\r\n                          shrink: true,\r\n                        }}\r\n                        InputProps={{\r\n                          style: { color: \"#132c33\" },\r\n                        }}\r\n                      />\r\n                    </tr>\r\n                    <tr>\r\n                      <UpdateResponsiveDialogActivities\r\n                        isZoom={checked}\r\n                        currentTime={props.currentTime}\r\n                        groupName={props.groupName}\r\n                        type={props.type}\r\n                        id={activity.id}\r\n                        dates={dates}\r\n                      />\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n              );\r\n            }\r\n          })\r\n          : approvedActivitiess.map((activity) => {\r\n            if (props.id === activity.id) {\r\n              return (\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                  <table>\r\n                    <tr>\r\n                      הקורס יתבצע באופן מקוון\r\n                        <Checkbox\r\n                        id=\"zoomCheckBox\"\r\n                        checked={checked}\r\n                        onClick={handleChange}\r\n                        style={{ fill: \"#132c33\" }}\r\n                        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                        style={{\r\n                          paddingTop: \"1px\",\r\n                          backgroundColor: \"#132c33\", maxWidth: \"40px\",\r\n                          maxHeight: \"40px\",\r\n                        }}\r\n                      />\r\n                    </tr>\r\n                    <tr>{zoomLink}</tr>\r\n                    <tr>\r\n                      <FormElement\r\n                        name=\"activityCount\"\r\n                        title=\": מספר מפגשים\"\r\n                        type=\"number\"\r\n                        onChange={createDateInputs}\r\n                        defaultValue={activity.activityCount}\r\n                      />\r\n                    </tr>\r\n                    <tr id=\"dates_tr\">{dates}</tr>\r\n                    <tr>\r\n                      <UpdateResponsiveDialogActivities\r\n                        isZoom={checked}\r\n                        groupName={props.groupName}\r\n                        id={activity.id}\r\n                        type={props.type}\r\n                        idx={props.idx}\r\n                        currentTime={props.currentTime}\r\n                        dates={dates}\r\n                      />\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n              );\r\n            }\r\n          })}\r\n      </CardContent>\r\n      {/* </Collapse> */}\r\n    </Card>\r\n  );\r\n}\r\n",{"ruleId":"62","severity":1,"message":"63","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":26},{"ruleId":"62","severity":1,"message":"66","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":15},{"ruleId":"62","severity":1,"message":"67","line":4,"column":10,"nodeType":"64","messageId":"65","endLine":4,"endColumn":24},{"ruleId":"62","severity":1,"message":"68","line":9,"column":8,"nodeType":"64","messageId":"65","endLine":9,"endColumn":21},{"ruleId":"62","severity":1,"message":"69","line":20,"column":6,"nodeType":"64","messageId":"65","endLine":20,"endColumn":11},{"ruleId":"62","severity":1,"message":"70","line":21,"column":6,"nodeType":"64","messageId":"65","endLine":21,"endColumn":11},{"ruleId":"62","severity":1,"message":"71","line":22,"column":6,"nodeType":"64","messageId":"65","endLine":22,"endColumn":18},{"ruleId":"62","severity":1,"message":"72","line":23,"column":6,"nodeType":"64","messageId":"65","endLine":23,"endColumn":17},{"ruleId":"62","severity":1,"message":"73","line":25,"column":6,"nodeType":"64","messageId":"65","endLine":25,"endColumn":15},{"ruleId":"62","severity":1,"message":"74","line":28,"column":16,"nodeType":"64","messageId":"65","endLine":28,"endColumn":23},{"ruleId":"62","severity":1,"message":"75","line":38,"column":10,"nodeType":"64","messageId":"65","endLine":38,"endColumn":15},{"ruleId":"62","severity":1,"message":"76","line":40,"column":10,"nodeType":"64","messageId":"65","endLine":40,"endColumn":19},{"ruleId":"62","severity":1,"message":"77","line":40,"column":21,"nodeType":"64","messageId":"65","endLine":40,"endColumn":29},{"ruleId":"62","severity":1,"message":"78","line":49,"column":3,"nodeType":"64","messageId":"65","endLine":49,"endColumn":12},{"ruleId":"79","severity":1,"message":"80","line":66,"column":6,"nodeType":"81","endLine":66,"endColumn":8,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":80,"column":9,"nodeType":"85","endLine":80,"endColumn":12},{"ruleId":"62","severity":1,"message":"86","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":12},{"ruleId":"62","severity":1,"message":"87","line":7,"column":8,"nodeType":"64","messageId":"65","endLine":7,"endColumn":19},{"ruleId":"62","severity":1,"message":"88","line":8,"column":8,"nodeType":"64","messageId":"65","endLine":8,"endColumn":16},{"ruleId":"62","severity":1,"message":"89","line":9,"column":8,"nodeType":"64","messageId":"65","endLine":9,"endColumn":18},{"ruleId":"62","severity":1,"message":"90","line":11,"column":8,"nodeType":"64","messageId":"65","endLine":11,"endColumn":22},{"ruleId":"62","severity":1,"message":"91","line":18,"column":3,"nodeType":"64","messageId":"65","endLine":18,"endColumn":26},{"ruleId":"62","severity":1,"message":"92","line":19,"column":3,"nodeType":"64","messageId":"65","endLine":19,"endColumn":27},{"ruleId":"62","severity":1,"message":"66","line":21,"column":8,"nodeType":"64","messageId":"65","endLine":21,"endColumn":15},{"ruleId":"62","severity":1,"message":"93","line":21,"column":42,"nodeType":"64","messageId":"65","endLine":21,"endColumn":53},{"ruleId":"62","severity":1,"message":"94","line":22,"column":8,"nodeType":"64","messageId":"65","endLine":22,"endColumn":21},{"ruleId":"95","severity":1,"message":"96","line":104,"column":58,"nodeType":"97","messageId":"98","endLine":104,"endColumn":60},{"ruleId":"79","severity":1,"message":"99","line":119,"column":6,"nodeType":"81","endLine":119,"endColumn":8,"suggestions":"100"},{"ruleId":"62","severity":1,"message":"101","line":153,"column":9,"nodeType":"64","messageId":"65","endLine":153,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":170,"column":26,"nodeType":"97","messageId":"104","endLine":170,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":203,"column":26,"nodeType":"97","messageId":"104","endLine":203,"endColumn":27},{"ruleId":"105","severity":1,"message":"106","line":259,"column":50,"nodeType":"107","messageId":"108","endLine":259,"endColumn":52},{"ruleId":"105","severity":1,"message":"106","line":345,"column":45,"nodeType":"107","messageId":"108","endLine":345,"endColumn":47},{"ruleId":"95","severity":1,"message":"96","line":92,"column":58,"nodeType":"97","messageId":"98","endLine":92,"endColumn":60},{"ruleId":"79","severity":1,"message":"109","line":107,"column":6,"nodeType":"81","endLine":107,"endColumn":8,"suggestions":"110"},{"ruleId":"62","severity":1,"message":"101","line":141,"column":9,"nodeType":"64","messageId":"65","endLine":141,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":158,"column":39,"nodeType":"97","messageId":"104","endLine":158,"endColumn":40},{"ruleId":"62","severity":1,"message":"111","line":179,"column":9,"nodeType":"64","messageId":"65","endLine":179,"endColumn":17},{"ruleId":"102","severity":1,"message":"103","line":181,"column":26,"nodeType":"97","messageId":"104","endLine":181,"endColumn":27},{"ruleId":"105","severity":1,"message":"106","line":225,"column":51,"nodeType":"107","messageId":"108","endLine":225,"endColumn":53},{"ruleId":"105","severity":1,"message":"106","line":311,"column":48,"nodeType":"107","messageId":"108","endLine":311,"endColumn":50},{"ruleId":"112","severity":1,"message":"113","line":324,"column":25,"nodeType":"114","endLine":328,"endColumn":27},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Amplify' is defined but never used.","'AmplifySignOut' is defined but never used.","'ReactCardFlip' is defined but never used.","'gname' is assigned a value but never used.","'fname' is assigned a value but never used.","'emailAddress' is assigned a value but never used.","'phoneNumber' is assigned a value but never used.","'groupName' is assigned a value but never used.","'signOut' is defined but never used.","'users' is assigned a value but never used.","'prevState' is assigned a value but never used.","'setState' is assigned a value but never used.","'nextLevel' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.","ArrayExpression",["115"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'clsx' is defined but never used.","'CardActions' is defined but never used.","'Collapse' is defined but never used.","'IconButton' is defined but never used.","'ExpandMoreIcon' is defined but never used.","'deletePendingActivities' is defined but never used.","'deleteApprovedActivities' is defined but never used.","'selectInput' is defined but never used.","'ActivityTable' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'fetchPendingActivities'. Either include it or remove the dependency array.",["116"],"'handleExpandClick' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has a missing dependency: 'fetchApprovedActivities'. Either include it or remove the dependency array.",["117"],"'tzoffset' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},"Update the dependencies array to be: [fetchUsers]",{"range":"124","text":"125"},"Update the dependencies array to be: [fetchPendingActivities]",{"range":"126","text":"127"},"Update the dependencies array to be: [fetchApprovedActivities]",{"range":"128","text":"129"},[2262,2264],"[fetchUsers]",[3565,3567],"[fetchPendingActivities]",[3053,3055],"[fetchApprovedActivities]"]
=======
[{"D:\\Users\\Daniel\\Desktop\\EduCenter\\Educational-Center\\src\\components\\Profile\\profile.js":"1"},{"size":3734,"mtime":1623076710772,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1l0352b","D:\\Users\\Daniel\\Desktop\\EduCenter\\Educational-Center\\src\\components\\Profile\\profile.js",["6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21"],{"ruleId":"22","severity":1,"message":"23","line":1,"column":17,"nodeType":"24","messageId":"25","endLine":1,"endColumn":26},{"ruleId":"22","severity":1,"message":"26","line":3,"column":8,"nodeType":"24","messageId":"25","endLine":3,"endColumn":15},{"ruleId":"22","severity":1,"message":"27","line":4,"column":10,"nodeType":"24","messageId":"25","endLine":4,"endColumn":24},{"ruleId":"22","severity":1,"message":"28","line":9,"column":8,"nodeType":"24","messageId":"25","endLine":9,"endColumn":21},{"ruleId":"22","severity":1,"message":"29","line":20,"column":6,"nodeType":"24","messageId":"25","endLine":20,"endColumn":11},{"ruleId":"22","severity":1,"message":"30","line":21,"column":6,"nodeType":"24","messageId":"25","endLine":21,"endColumn":11},{"ruleId":"22","severity":1,"message":"31","line":22,"column":6,"nodeType":"24","messageId":"25","endLine":22,"endColumn":18},{"ruleId":"22","severity":1,"message":"32","line":23,"column":6,"nodeType":"24","messageId":"25","endLine":23,"endColumn":17},{"ruleId":"22","severity":1,"message":"33","line":25,"column":6,"nodeType":"24","messageId":"25","endLine":25,"endColumn":15},{"ruleId":"22","severity":1,"message":"34","line":28,"column":16,"nodeType":"24","messageId":"25","endLine":28,"endColumn":23},{"ruleId":"22","severity":1,"message":"35","line":38,"column":10,"nodeType":"24","messageId":"25","endLine":38,"endColumn":15},{"ruleId":"22","severity":1,"message":"36","line":40,"column":10,"nodeType":"24","messageId":"25","endLine":40,"endColumn":19},{"ruleId":"22","severity":1,"message":"37","line":40,"column":21,"nodeType":"24","messageId":"25","endLine":40,"endColumn":29},{"ruleId":"22","severity":1,"message":"38","line":49,"column":3,"nodeType":"24","messageId":"25","endLine":49,"endColumn":12},{"ruleId":"39","severity":1,"message":"40","line":66,"column":6,"nodeType":"41","endLine":66,"endColumn":8,"suggestions":"42"},{"ruleId":"43","severity":1,"message":"44","line":80,"column":9,"nodeType":"45","endLine":80,"endColumn":12},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Amplify' is defined but never used.","'AmplifySignOut' is defined but never used.","'ReactCardFlip' is defined but never used.","'gname' is assigned a value but never used.","'fname' is assigned a value but never used.","'emailAddress' is assigned a value but never used.","'phoneNumber' is assigned a value but never used.","'groupName' is assigned a value but never used.","'signOut' is defined but never used.","'users' is assigned a value but never used.","'prevState' is assigned a value but never used.","'setState' is assigned a value but never used.","'nextLevel' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchUsers'. Either include it or remove the dependency array.","ArrayExpression",["46"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",{"desc":"47","fix":"48"},"Update the dependencies array to be: [fetchUsers]",{"range":"49","text":"50"},[2262,2264],"[fetchUsers]"]
>>>>>>> 6240badbd42075eadfe640e05f69769d0579ecad
