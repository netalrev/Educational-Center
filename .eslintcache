[{"D:\\Users\\Daniel\\Desktop\\EduCenter\\Educational-Center\\src\\graphql\\queries.js":"1","D:\\Users\\Daniel\\Desktop\\EduCenter\\Educational-Center\\src\\components\\Activities\\ActivityTable.js":"2","D:\\Users\\Daniel\\Desktop\\EduCenter\\Educational-Center\\src\\components\\Activities\\ActivitiesPage.js":"3","D:\\Users\\Daniel\\Desktop\\EduCenter\\Educational-Center\\src\\App.js":"4","D:\\Users\\Daniel\\Desktop\\EduCenter\\Educational-Center\\src\\index.js":"5","D:\\Users\\Daniel\\Desktop\\EduCenter\\Educational-Center\\src\\components\\ManageActivities\\DeleteEditApprovedForContectSupplier.js":"6","D:\\Users\\Daniel\\Desktop\\EduCenter\\Educational-Center\\src\\components\\ManageActivities\\FormElement.js":"7","D:\\Users\\Daniel\\Desktop\\EduCenter\\Educational-Center\\src\\components\\ManageActivities\\SubmitResponsiveDialogActivityFeedback.js":"8","D:\\Users\\Daniel\\Desktop\\EduCenter\\Educational-Center\\src\\components\\HomePage\\HomePage.js":"9","D:\\Users\\Daniel\\Desktop\\EduCenter\\Educational-Center\\src\\components\\Activities\\CancelRegisterResponsiveDialogActivities.js":"10"},{"size":5642,"mtime":1621591222195,"results":"11","hashOfConfig":"12"},{"size":8106,"mtime":1621591222187,"results":"13","hashOfConfig":"12"},{"size":1585,"mtime":1621593437568,"results":"14","hashOfConfig":"12"},{"size":8441,"mtime":1621593420413,"results":"15","hashOfConfig":"12"},{"size":461,"mtime":1621593409292,"results":"16","hashOfConfig":"12"},{"size":12245,"mtime":1621430923422,"results":"17","hashOfConfig":"12"},{"size":514,"mtime":1620741768365,"results":"18","hashOfConfig":"12"},{"size":13350,"mtime":1621591222192,"results":"19","hashOfConfig":"12"},{"size":5858,"mtime":1621633699843,"results":"20","hashOfConfig":"12"},{"size":2876,"mtime":1621430923365,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l0352b",{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Users\\Daniel\\Desktop\\EduCenter\\Educational-Center\\src\\graphql\\queries.js",[],"D:\\Users\\Daniel\\Desktop\\EduCenter\\Educational-Center\\src\\components\\Activities\\ActivityTable.js",["45","46","47","48"],"import React, { Component } from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { listApprovedActivitiess } from \"../../graphql/queries\";\r\nimport { API, graphqlOperation } from \"aws-amplify\";\r\n\r\nimport RecipeReviewCard from \"./RecipeReviewCard\";\r\n\r\nimport SearchBar from \"material-ui-search-bar\";\r\n\r\nexport default function ActivityTable(props) {\r\n    const [allApprovedActivitiess, setAllApprovedActivitiess] = useState([]);\r\n    const [toShow, setToShow] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchAllApprovedActivities();\r\n    }, [props.currentTime]);\r\n    useEffect(() => {\r\n        fillToShow();\r\n    }, [allApprovedActivitiess]);\r\n    var dates_class = {\r\n        convert: function (d) {\r\n            // Converts the date in d to a date-object. The input can be:\r\n            //   a date object: returned without modification\r\n            //  an array      : Interpreted as [year,month,day]. NOTE: month is 0-11.\r\n            //   a number     : Interpreted as number of milliseconds\r\n            //                  since 1 Jan 1970 (a timestamp) \r\n            //   a string     : Any format supported by the javascript engine, like\r\n            //                  \"YYYY/MM/DD\", \"MM/DD/YYYY\", \"Jan 31 2009\" etc.\r\n            //  an object     : Interpreted as an object with year, month and date\r\n            //                  attributes.  **NOTE** month is 0-11.\r\n            return (\r\n                d.constructor === Date ? d :\r\n                    d.constructor === Array ? new Date(d[0], d[1], d[2]) :\r\n                        d.constructor === Number ? new Date(d) :\r\n                            d.constructor === String ? new Date(d) :\r\n                                typeof d === \"object\" ? new Date(d.year, d.month, d.date) :\r\n                                    NaN\r\n            );\r\n        },\r\n        compare: function (a, b) {\r\n            // Compare two dates (could be of any type supported by the convert\r\n            // function above) and returns:\r\n            //  -1 : if a < b\r\n            //   0 : if a = b\r\n            //   1 : if a > b\r\n            // NaN : if a or b is an illegal date\r\n            // NOTE: The code inside isFinite does an assignment (=).\r\n            return (\r\n                isFinite(a = this.convert(a).valueOf()) &&\r\n                    isFinite(b = this.convert(b).valueOf()) ?\r\n                    (a > b) - (a < b) :\r\n                    NaN\r\n            );\r\n        },\r\n        inRange: function (d, start, end) {\r\n            // Checks if date in d is between dates in start and end.\r\n            // Returns a boolean or NaN:\r\n            //    true  : if d is between start and end (inclusive)\r\n            //    false : if d is before start or after end\r\n            //    NaN   : if one or more of the dates is illegal.\r\n            // NOTE: The code inside isFinite does an assignment (=).\r\n            return (\r\n                isFinite(d = this.convert(d).valueOf()) &&\r\n                    isFinite(start = this.convert(start).valueOf()) &&\r\n                    isFinite(end = this.convert(end).valueOf()) ?\r\n                    start <= d && d <= end :\r\n                    NaN\r\n            );\r\n        }\r\n    };\r\n\r\n    function comparing(a, b) {\r\n        var i = 0, j = 0;\r\n        while (i < a.activityCount && j < b.activityCount) {\r\n            if (dates_class.compare(dates_class.convert(a.dates[i]), props.currentTime) === -1) {\r\n                i++;\r\n                continue;\r\n            }\r\n            else if (dates_class.compare(dates_class.convert(b.dates[j]), props.currentTime) === -1) {\r\n                j++;\r\n                continue;\r\n            }\r\n            if (dates_class.compare(dates_class.convert(a.dates[i]), dates_class.convert(b.dates[j])) === 1) return 1;\r\n            else if (dates_class.compare(dates_class.convert(a.dates[i]), dates_class.convert(b.dates[j])) === 0) return 0;\r\n            else return -1;\r\n        }\r\n\r\n    }\r\n    const fetchAllApprovedActivities = async () => {\r\n        try {\r\n            const approvedActivitiesData = await API.graphql(graphqlOperation(listApprovedActivitiess));\r\n            const approvedActivitiesList = approvedActivitiesData.data.listApprovedActivitiess.items;\r\n            approvedActivitiesList.sort(comparing);\r\n            for (var i = 0; i < approvedActivitiesList.length; i++) {\r\n                // console.log(\"HEHEYYYYYYYYYYY\", dates_class.compare((props.currentTime), dates_class.convert(dates_class.convert(approvedActivitiesList[i].dates[approvedActivitiesList[i].dates.length - 1]).setMinutes(dates_class.convert(approvedActivitiesList[i].dates[approvedActivitiesList[i].dates.length - 1]).getMinutes() + 60))))\r\n                // console.log(dates_class.compare(dates_class.convert(props.currentTime), dates_class.convert(dates_class.convert(approvedActivitiesList[i].dates[approvedActivitiesList[i].dates.length - 1]).setHours(dates_class.convert(approvedActivitiesList[i].dates[approvedActivitiesList[i].dates.length - 1]).getHours() + 1))));\r\n                if (dates_class.compare((props.currentTime), dates_class.convert(dates_class.convert(approvedActivitiesList[i].dates[approvedActivitiesList[i].dates.length - 1]).setMinutes(dates_class.convert(approvedActivitiesList[i].dates[approvedActivitiesList[i].dates.length - 1]).getMinutes() + 60))) === 1) {\r\n                    console.log(approvedActivitiesList[i].title);\r\n                    approvedActivitiesList.splice(i, 1);\r\n                }\r\n            }\r\n            setAllApprovedActivitiess(approvedActivitiesList);\r\n        } catch (error) {\r\n            console.log(\"error on fetching Approved Activities\", error);\r\n        }\r\n    };\r\n\r\n    function fillToShow() {\r\n        var allActivity = [];\r\n        allActivity = allApprovedActivitiess.map(activity =>\r\n            <RecipeReviewCard\r\n                id={activity.id}\r\n                img={activity.img}\r\n                dates={activity.dates}\r\n                activityCount={activity.activityCount}\r\n                owner={activity.owner}\r\n                title={activity.title}\r\n                description={activity.description}\r\n                zoom={activity.zoom}\r\n                email={props.email}\r\n                givenName={props.givenName}\r\n                familyName={props.familyName}\r\n                phoneNumber={props.phoneNumber}\r\n                groupName={props.groupName}\r\n                currentTime={props.currentTime} />)\r\n        setToShow(allActivity);\r\n    }\r\n\r\n    function search(key) {\r\n        var allActivity = [];\r\n        allActivity = allApprovedActivitiess.map(activity =>\r\n            <RecipeReviewCard\r\n                id={activity.id}\r\n                img={activity.img}\r\n                dates={activity.dates}\r\n                activityCount={activity.activityCount}\r\n                owner={activity.owner}\r\n                title={activity.title}\r\n                description={activity.description}\r\n                email={props.email}\r\n                givenName={props.givenName}\r\n                familyName={props.familyName}\r\n                phoneNumber={props.phoneNumber}\r\n                zoom={activity.zoom}\r\n                currentTime={props.currentTime} />)\r\n        const filterdToShow = allActivity.filter(activity => {\r\n            if (activity.props.title.includes(key) || activity.props.owner.includes(key)) return activity;\r\n        });\r\n        setToShow(filterdToShow);\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '100%' }}>\r\n            <div>\r\n                <SearchBar\r\n                    onChange={(value) => search(value)}\r\n                    style={{\r\n                        maxWidth: 1350,\r\n                        marginInline: 85\r\n                    }}\r\n                />\r\n            </div>\r\n            <br></br>\r\n            <br></br>\r\n            <div style={{\r\n                display: \"flex\",\r\n                flexFlow: \"row wrap\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\"\r\n            }}>\r\n                {toShow}\r\n            </div>\r\n        </div>\r\n    );\r\n}",["49","50"],"D:\\Users\\Daniel\\Desktop\\EduCenter\\Educational-Center\\src\\components\\Activities\\ActivitiesPage.js",["51","52"],"D:\\Users\\Daniel\\Desktop\\EduCenter\\Educational-Center\\src\\App.js",["53","54","55","56","57"],"D:\\Users\\Daniel\\Desktop\\EduCenter\\Educational-Center\\src\\index.js",[],"D:\\Users\\Daniel\\Desktop\\EduCenter\\Educational-Center\\src\\components\\ManageActivities\\DeleteEditApprovedForContectSupplier.js",["58","59","60","61","62"],"D:\\Users\\Daniel\\Desktop\\EduCenter\\Educational-Center\\src\\components\\ManageActivities\\FormElement.js",[],"D:\\Users\\Daniel\\Desktop\\EduCenter\\Educational-Center\\src\\components\\ManageActivities\\SubmitResponsiveDialogActivityFeedback.js",["63","64","65","66","67","68","69","70"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { listUsers, listSubmitedActivityFeedbacks, listActivityFeedbacks } from \"../../graphql/queries\";\r\nimport { updateUser, deleteActivityFeedback, createSubmitedActivityFeedback, updateActivityFeedback } from \"../../graphql/mutations\";\r\n\r\nimport Amplify, { API, graphqlOperation } from \"aws-amplify\";\r\nimport { useState, useEffect } from \"react\";\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\n\r\nexport default function SubmitResponsiveDialogActivityFeedback(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const [activitiesFeedback, setActivitiesFeedback] = useState([]);\r\n    const [allActivitiesFeedback, setAllActivitiesFeedback] = useState([]);\r\n    const [allSubmittedActivitiesFeedback, setSubmittedActivitiesFeedback] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const fetchUsers = async () => {\r\n        try {\r\n            const usersData = await API.graphql(graphqlOperation(listUsers));\r\n            const usersList = usersData.data.listUsers.items;\r\n            setUsers(usersList);\r\n        } catch (error) {\r\n            console.log(\"error on fetching Pending Activities\", error);\r\n        }\r\n    };\r\n    const updateScore = async (to_update, to_add) => {\r\n        try {\r\n            var list = users.filter(user => user.id === to_update);\r\n            const to_edit = list[0];\r\n            to_edit.score = to_edit.score + to_add;\r\n            delete to_edit.createdAt;\r\n            delete to_edit.updatedAt;\r\n            const userData = await API.graphql(graphqlOperation(updateUser, { input: to_edit }));\r\n            const userActivityList = [...users];\r\n            var idx = users.filter((user, idx) => {\r\n                if (user.id === to_update) return idx\r\n            });\r\n            userActivityList[idx[0]] = userData.data.updateUser;\r\n            setUsers(userActivityList);\r\n        } catch (error) {\r\n            console.log(\"Error in updating pending activity\", error);\r\n        }\r\n    }\r\n    // id: ID!\r\n    //     name: String!\r\n    //     email: String!\r\n    //     phone_number: String!\r\n    //     score: Int!\r\n\r\n\r\n    // useEffect(() => { // Fetch for content suppliers\r\n    //     fetchActivitiesFeedbacks();\r\n    // }, []);\r\n    var dates_class = {\r\n        convert: function (d) {\r\n            // Converts the date in d to a date-object. The input can be:\r\n            //   a date object: returned without modification\r\n            //  an array      : Interpreted as [year,month,day]. NOTE: month is 0-11.\r\n            //   a number     : Interpreted as number of milliseconds\r\n            //                  since 1 Jan 1970 (a timestamp) \r\n            //   a string     : Any format supported by the javascript engine, like\r\n            //                  \"YYYY/MM/DD\", \"MM/DD/YYYY\", \"Jan 31 2009\" etc.\r\n            //  an object     : Interpreted as an object with year, month and date\r\n            //                  attributes.  **NOTE** month is 0-11.\r\n            return (\r\n                d.constructor === Date ? d :\r\n                    d.constructor === Array ? new Date(d[0], d[1], d[2]) :\r\n                        d.constructor === Number ? new Date(d) :\r\n                            d.constructor === String ? new Date(d) :\r\n                                typeof d === \"object\" ? new Date(d.year, d.month, d.date) :\r\n                                    NaN\r\n            );\r\n        },\r\n        compare: function (a, b) {\r\n            // Compare two dates (could be of any type supported by the convert\r\n            // function above) and returns:\r\n            //  -1 : if a < b\r\n            //   0 : if a = b\r\n            //   1 : if a > b\r\n            // NaN : if a or b is an illegal date\r\n            // NOTE: The code inside isFinite does an assignment (=).\r\n            return (\r\n                isFinite(a = this.convert(a).valueOf()) &&\r\n                    isFinite(b = this.convert(b).valueOf()) ?\r\n                    (a > b) - (a < b) :\r\n                    NaN\r\n            );\r\n        },\r\n        inRange: function (d, start, end) {\r\n            // Checks if date in d is between dates in start and end.\r\n            // Returns a boolean or NaN:\r\n            //    true  : if d is between start and end (inclusive)\r\n            //    false : if d is before start or after end\r\n            //    NaN   : if one or more of the dates is illegal.\r\n            // NOTE: The code inside isFinite does an assignment (=).\r\n            return (\r\n                isFinite(d = this.convert(d).valueOf()) &&\r\n                    isFinite(start = this.convert(start).valueOf()) &&\r\n                    isFinite(end = this.convert(end).valueOf()) ?\r\n                    start <= d && d <= end :\r\n                    NaN\r\n            );\r\n        }\r\n    };\r\n    useEffect(() => { // Fetch for admins\r\n        fetchAllActivitiesFeedbacks();\r\n    }, []);\r\n\r\n    useEffect(() => { // Fetch for admins\r\n        fetchSubmittedActivitiesFeedbacks();\r\n    }, []);\r\n    useEffect(() => {\r\n        fetchUsers();\r\n    }, []);\r\n    const fetchSubmittedActivitiesFeedbacks = async () => {\r\n        try {\r\n            const submitteActivitiesFeedbackData = await API.graphql(graphqlOperation(listSubmitedActivityFeedbacks));\r\n            const submittedActivitiesFeedbackList = submitteActivitiesFeedbackData.data.listSubmitedActivityFeedbacks.items;\r\n            setSubmittedActivitiesFeedback(submittedActivitiesFeedbackList);\r\n        } catch (error) {\r\n            console.log(\"error on fetching submitted activites feedback\", error);\r\n        }\r\n    };\r\n    const fetchActivitiesFeedbacks = async () => {\r\n        try {\r\n            const activitiesFeedbackData = await API.graphql(graphqlOperation(listActivityFeedbacks, { filter: { email: { eq: props.email } } }));\r\n            const activitiesFeedbackList = activitiesFeedbackData.data.listActivityFeedbacks.items;\r\n            setActivitiesFeedback(activitiesFeedbackList);\r\n        } catch (error) {\r\n            console.log(\"error on fetching Pending Activities\", error);\r\n        }\r\n    };\r\n\r\n    const fetchAllActivitiesFeedbacks = async () => {\r\n        try {\r\n            const activitiesFeedbackData = await API.graphql(graphqlOperation(listActivityFeedbacks));\r\n            const activitiesFeedbackList = activitiesFeedbackData.data.listActivityFeedbacks.items;\r\n            setAllActivitiesFeedback(activitiesFeedbackList);\r\n        } catch (error) {\r\n            console.log(\"error on fetching Pending Activities\", error);\r\n        }\r\n    };\r\n    const delete_ActivityFeedback = async (id_to_delete) => {\r\n        try {\r\n            const del = { id: id_to_delete };\r\n            await API.graphql(graphqlOperation(deleteActivityFeedback, { input: del }));\r\n        } catch (error) {\r\n            console.log(\"Error on delete single Approved Activity \", error);\r\n        }\r\n    };\r\n    const createNewSubmittedFeedback = async () => {\r\n        try {\r\n            var toCreate = allActivitiesFeedback.filter(feedback => feedback.activity_id === props.id)[0];\r\n            console.log(toCreate);\r\n            var IDs = allSubmittedActivitiesFeedback.map(element => parseInt(element.id));\r\n            console.log(\"IDS\", IDs);\r\n            IDs.sort(function compareNumbers(a, b) {\r\n                return a - b;\r\n            });\r\n            var zoomLink = '';\r\n            if (toCreate.zoom.length > 0)\r\n                zoomLink = toCreate.zoom;\r\n            const activityFeedback = {\r\n                id: IDs.length == 0 ? 0 : IDs[IDs.length - 1] + 1,\r\n                owner: toCreate.owner,\r\n                title: toCreate.title,\r\n                email: toCreate.email,\r\n                activity_id: toCreate.activity_id,\r\n                zoom: zoomLink,\r\n                img: toCreate.img,\r\n                activityCount: toCreate.activityCount,\r\n                date: toCreate.date,\r\n                phone_number: toCreate.phone_number,\r\n                form: toCreate.form\r\n            };\r\n            console.log(activityFeedback);\r\n            await API.graphql(graphqlOperation(createSubmitedActivityFeedback, { input: activityFeedback }));\r\n            await fetchSubmittedActivitiesFeedbacks();\r\n        } catch (err) {\r\n            console.log(\"Error while creating new submitted feedback.\", err)\r\n        }\r\n    }\r\n    const editActivityFeedback = async (id) => {\r\n        try {\r\n            var list = allActivitiesFeedback.filter(activity => activity.activity_id === id);\r\n            const to_edit = list[0];\r\n            var form = [];\r\n            console.log(\"edit\", to_edit);\r\n            to_edit.form.map(student => {\r\n                var grade1 = student[0] + \" 1\";\r\n                var grade2 = student[0] + \" 2\";\r\n                var grade3 = student[0] + \" 3\";\r\n                var studentWithGrade = [];\r\n                studentWithGrade.push(student[0]);\r\n                studentWithGrade.push(student[1]);\r\n                studentWithGrade.push(student[2]);\r\n                var attendance = Array.from(document.getElementsByName(grade1)).filter(button => button.checked)[0];\r\n                studentWithGrade.push(attendance.value);\r\n                var participation = Array.from(document.getElementsByName(grade2)).filter(button => button.checked)[0];\r\n                studentWithGrade.push(participation.value);\r\n                var contribution = Array.from(document.getElementsByName(grade3)).filter(button => button.checked)[0];\r\n                studentWithGrade.push(contribution.value);\r\n                form.push(studentWithGrade);\r\n            })\r\n            delete to_edit.createdAt;\r\n            delete to_edit.updatedAt;\r\n            to_edit.form = form;\r\n            console.log(\"edit\", to_edit);\r\n            const activityFeedbackData = await API.graphql(graphqlOperation(updateActivityFeedback, { input: to_edit }));\r\n            const activityFeedbackList = [...allActivitiesFeedback];\r\n            var idx = allActivitiesFeedback.filter((activity, idx) => {\r\n                if (activity.id === id) return idx\r\n            });\r\n            activityFeedbackList[idx[0]] = activityFeedbackData.data.updateActivityFeedback;\r\n            setAllActivitiesFeedback(activityFeedbackList);\r\n        } catch (error) {\r\n            console.log(\"Error in approved activity\", error);\r\n        }\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const update_S = async (to_update, score) => {\r\n        await updateScore(to_update, score);\r\n    }\r\n    const handleClose = async () => {\r\n        setOpen(false);\r\n        var to_del = allActivitiesFeedback.filter(feedback => feedback.activity_id === props.id)[0].id;\r\n        await editActivityFeedback(props.id).then(\r\n            ((allActivitiesFeedback.filter(feedback => feedback.activity_id === props.id)[0].form).map(elm => {\r\n                var toReturn = [];\r\n                toReturn.push(users.filter(user => user.email === elm[1])[0].id);\r\n                toReturn.push(parseInt(elm[3]) + parseInt(elm[4]) + parseInt(elm[5]));\r\n                console.log(\"toReturn\", toReturn);\r\n                return toReturn;\r\n            })).forEach(user => {\r\n                update_S(user[0], user[1]);\r\n            })\r\n\r\n        ).then(alert(\"משוב הוזן בהצלחה.\")).then(await createNewSubmittedFeedback()).then(await delete_ActivityFeedback(to_del));\r\n\r\n        window.location.reload(false);\r\n    };\r\n    const handleCancel = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button startIcon={<UpdateIcon style={{ fill: \"rgba(60,60,60)\" }}></UpdateIcon>} variant=\"outlined\" style={{ fill: \"rgba(60,60,60)\" }} onClick={handleClickOpen}>\r\n                עדכן\r\n      </Button>\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                open={open}\r\n                onClose={handleCancel}\r\n                aria-labelledby=\"responsive-dialog-title\"\r\n            >\r\n                <DialogTitle id=\"responsive-dialog-title\" style={{ color: \"red\" }}><b>אישור העלאת תוכן</b></DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        ?האם את/ה בטוח/ה שפרטי הפעילות שהזנת תואמים את הפעילות\r\n          </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleCancel} style={{ fill: \"rgba(60,60,60)\" }}>\r\n                        בטל העלאה\r\n          </Button>\r\n                    <Button onClick={handleClose} style={{ fill: \"rgba(60,60,60)\" }} autoFocus>\r\n                        אשר העלאה\r\n          </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","D:\\Users\\Daniel\\Desktop\\EduCenter\\Educational-Center\\src\\components\\HomePage\\HomePage.js",["71"],"D:\\Users\\Daniel\\Desktop\\EduCenter\\Educational-Center\\src\\components\\Activities\\CancelRegisterResponsiveDialogActivities.js",[],{"ruleId":"72","severity":1,"message":"73","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"77","line":16,"column":8,"nodeType":"78","endLine":16,"endColumn":27,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"80","line":19,"column":8,"nodeType":"78","endLine":19,"endColumn":32,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":146,"column":59,"nodeType":"84","messageId":"85","endLine":146,"endColumn":61},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":26},{"ruleId":"72","severity":1,"message":"90","line":8,"column":15,"nodeType":"74","messageId":"75","endLine":8,"endColumn":21},{"ruleId":"72","severity":1,"message":"91","line":22,"column":10,"nodeType":"74","messageId":"75","endLine":22,"endColumn":14},{"ruleId":"72","severity":1,"message":"92","line":23,"column":10,"nodeType":"74","messageId":"75","endLine":23,"endColumn":22},{"ruleId":"72","severity":1,"message":"93","line":34,"column":7,"nodeType":"74","messageId":"75","endLine":34,"endColumn":19},{"ruleId":"72","severity":1,"message":"94","line":74,"column":7,"nodeType":"74","messageId":"75","endLine":74,"endColumn":13},{"ruleId":"95","severity":1,"message":"96","line":96,"column":24,"nodeType":"97","messageId":"98","endLine":96,"endColumn":26},{"ruleId":"76","severity":1,"message":"99","line":74,"column":8,"nodeType":"78","endLine":74,"endColumn":10,"suggestions":"100"},{"ruleId":"72","severity":1,"message":"101","line":128,"column":9,"nodeType":"74","messageId":"75","endLine":128,"endColumn":21},{"ruleId":"72","severity":1,"message":"102","line":129,"column":9,"nodeType":"74","messageId":"75","endLine":129,"endColumn":24},{"ruleId":"95","severity":1,"message":"96","line":133,"column":59,"nodeType":"97","messageId":"98","endLine":133,"endColumn":61},{"ruleId":"95","severity":1,"message":"96","line":134,"column":64,"nodeType":"97","messageId":"98","endLine":134,"endColumn":66},{"ruleId":"72","severity":1,"message":"103","line":13,"column":8,"nodeType":"74","messageId":"75","endLine":13,"endColumn":15},{"ruleId":"72","severity":1,"message":"104","line":21,"column":12,"nodeType":"74","messageId":"75","endLine":21,"endColumn":30},{"ruleId":"82","severity":1,"message":"83","line":43,"column":48,"nodeType":"84","messageId":"85","endLine":43,"endColumn":50},{"ruleId":"72","severity":1,"message":"105","line":62,"column":9,"nodeType":"74","messageId":"75","endLine":62,"endColumn":20},{"ruleId":"72","severity":1,"message":"106","line":132,"column":11,"nodeType":"74","messageId":"75","endLine":132,"endColumn":35},{"ruleId":"95","severity":1,"message":"96","line":172,"column":32,"nodeType":"97","messageId":"98","endLine":172,"endColumn":34},{"ruleId":"82","severity":1,"message":"107","line":197,"column":38,"nodeType":"84","messageId":"108","endLine":197,"endColumn":40},{"ruleId":"82","severity":1,"message":"83","line":219,"column":68,"nodeType":"84","messageId":"85","endLine":219,"endColumn":70},{"ruleId":"72","severity":1,"message":"109","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":14},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAllApprovedActivities'. Either include it or remove the dependency array.","ArrayExpression",["110"],"React Hook useEffect has a missing dependency: 'fillToShow'. Either include it or remove the dependency array.",["111"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-native-reassign",["112"],"no-negated-in-lhs",["113"],"'setUrl' is assigned a value but never used.","'I18n' is defined but never used.","'Translations' is defined but never used.","'confirmEmail' is assigned a value but never used.","'loader' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'fetchApprovedActivities'. Either include it or remove the dependency array.",["114"],"'current_time' is assigned a value but never used.","'current_time_20' is assigned a value but never used.","'Amplify' is defined but never used.","'activitiesFeedback' is assigned a value but never used.","'dates_class' is assigned a value but never used.","'fetchActivitiesFeedbacks' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'Button' is defined but never used.",{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},"no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [fetchAllApprovedActivities, props.currentTime]",{"range":"121","text":"122"},"Update the dependencies array to be: [allApprovedActivitiess, fillToShow]",{"range":"123","text":"124"},"Update the dependencies array to be: [fetchApprovedActivities]",{"range":"125","text":"126"},[561,580],"[fetchAllApprovedActivities, props.currentTime]",[637,661],"[allApprovedActivitiess, fillToShow]",[2981,2983],"[fetchApprovedActivities]"]